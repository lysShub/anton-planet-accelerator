// Code generated by "stringer -output bvvd_gen.go -type=Kind,LocID"; DO NOT EDIT.

package bvvd

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Data-1]
	_ = x[PingProxyer-2]
	_ = x[PingForward-3]
	_ = x[PackLossClientUplink-4]
	_ = x[PackLossProxyerUplink-5]
	_ = x[PackLossProxyerDownlink-6]
	_ = x[_kind_end-7]
}

const _Kind_name = "DataPingProxyerPingForwardPackLossClientUplinkPackLossProxyerUplinkPackLossProxyerDownlink_kind_end"

var _Kind_index = [...]uint8{0, 4, 15, 26, 46, 67, 90, 99}

func (i Kind) String() string {
	i -= 1
	if i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Moscow-1]
	_ = x[Frankfurt-2]
	_ = x[Tokyo-3]
	_ = x[NewYork-4]
	_ = x[_end-5]
}

const _LocID_name = "MoscowFrankfurtTokyoNewYork_end"

var _LocID_index = [...]uint8{0, 6, 15, 20, 27, 31}

func (i LocID) String() string {
	i -= 1
	if i >= LocID(len(_LocID_index)-1) {
		return "LocID(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _LocID_name[_LocID_index[i]:_LocID_index[i+1]]
}
